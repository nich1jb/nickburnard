{"version":3,"sources":["components/common/constants.js","components/common/Title/Title.component.js","components/common/CircleButton/CircleButton.component.js","components/common/Quote/Quote.component.js","components/common/Icon/Cross.js","components/common/Icon/Circle.js","components/common/Icon/ZigZag.js","components/Header/IconsOverlay/IconsOverlay.component.js","components/Header/IconsOverlay/index.js","components/Header/Header.component.js","components/Header/index.js","components/FadeSection/FadeSection.component.js","components/FadeSection/index.js","components/About/About.component.js","components/About/index.js","components/Experience/JobCard/JobCard.component.js","components/Experience/JobCard/index.js","components/Experience/Experience.component.js","components/Experience/index.js","components/Footer/Footer.component.js","components/Footer/index.js","App.js","reportWebVitals.js","index.js"],"names":["COLOURS","TitleContainer","styled","div","Icon","span","Text","Title","icon","children","Circle","CircleButton","link","onClick","window","open","MainContainer","Quote","CrossIcon","height","width","x1","y1","x2","y2","stroke","strokeWidth","CircleIcon","cx","cy","r","fill","props","colour","ZigZagIcon","CrossContainer","CircleContainer","ZigZagContainer1","ZigZagContainer2","IconsOverlay","bounceAnimation","keyframes","tada","BannerContainer","HeaderOverlay","ScrollDownIcon","IoIosArrowDown","HeaderText","h1","SocialsContainer","Header","handleClick","style","className","layers","image","amount","FadeSectionContainer","isVisible","FadeSection","useState","setVisible","isLoaded","setIsloaded","fadeRef","useRef","useEffect","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","current","ref","AboutContainer","ContentContainer","AboutText","Paragraph","p","ProfileImage","img","Image","About","scrollToRef","toWords","ToWords","age","birthDate","Date","ageDifMs","now","ageDate","Math","abs","getUTCFullYear","calculateAge","yearsInIndustry","convert","getFullYear","toLowerCase","src","InnerTitle","Subtitle","TextContainer","Body","JobCard","logo","title","jobTitle","from","to","ExperienceContainer","Experience","Link","a","FooterContainer","Footer","href","App","aboutRef","scrollIntoView","behavior","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b7cf04a.chunk.js","sourcesContent":["export const COLOURS = {\n  ANAKIWA: '#B0CEFF',\n  BLACK: '#000000',\n  BLACK_40: 'rgba(0, 0, 0, 0.4)',\n  CERISE: '#E12782',\n  COLBALT: '#0045B5',\n  COTTON_CANDY: '#FFBADB',\n  LIGHT_ORCHID: '#E2A6C3',\n  ROSE: '#F41B81',\n  SCORPION: '#595959',\n  ST_TROPAZ: '#2D589D',\n  STRATOS: '#000836',\n  TUNDURA: '#404040',\n  PERANO: '#A7C3F1',\n  WHITE: '#FFFFFF',\n  WHITE_40: 'rgba(255, 255, 255, 0.4)',\n}\n","import styled from 'styled-components'\n\nimport { COLOURS } from '../constants'\n\nconst TitleContainer = styled.div`\n  padding-top: 90px;\n  font-size: 32px;\n  padding-bottom: 20px;\n`\n\nconst Icon = styled.span`\n  svg {\n    width: 50px;\n    height: 50px;\n    color: #00000075;\n  }\n`\n\nconst Text = styled.span`\n  color: ${COLOURS.STRATOS};\n  left: -20px;\n`\n\nexport const Title = ({ icon, children }) => {\n  return (\n    <TitleContainer>\n      <Icon>{icon}</Icon>\n      <Text>{children}</Text>\n    </TitleContainer>\n  )\n}\n","import styled from 'styled-components'\n\nimport { COLOURS } from '../constants'\n\nconst Circle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  background-color: ${COLOURS.BLACK};\n  margin: 5px;\n  width: 50px;\n  height: 50px;\n  line-height: 0;\n  &:hover {\n    background-color: ${COLOURS.CERISE};\n    cursor: pointer;\n  }\n`\n\nexport const CircleButton = ({ link, children }) => {\n  const openLink = () => {\n    window.open(link, '_blank')\n  }\n  return <Circle onClick={openLink}>{children}</Circle>\n}\n","import styled from 'styled-components'\n\nimport { COLOURS } from '../constants'\n\nconst MainContainer = styled.span`\n  color: ${COLOURS.SCORPION};\n`\n\nexport const Quote = ({ children }) => {\n  return <MainContainer>{children}</MainContainer>\n}\n","export const CrossIcon = () => {\n  return (\n    <svg height='50' width='50'>\n      <line x1='-25' y1='25' x2='50' y2='25' stroke={'#053178'} strokeWidth={15} />\n      <line x1='25' y1='0' x2='25' y2='50' stroke={'#053178'} strokeWidth={15} />\n    </svg>\n  )\n}\n","import { COLOURS } from '../constants'\n\nexport const CircleIcon = () => {\n  return (\n    <svg height='100' width='100'>\n      <circle cx='50' cy='50' r='40' stroke={COLOURS.ROSE} strokeWidth={7} fill={'none'} />\n    </svg>\n  )\n}\n","import styled from 'styled-components'\nimport { CgShapeZigzag } from 'react-icons/cg'\n\nimport { COLOURS } from '../constants'\n\nconst MainContainer = styled.div`\n  svg {\n    width: 100px;\n    height: 100px;\n    color: ${(props) => (props.colour ? props.colour : COLOURS.WHITE)};\n  }\n`\n\nexport const ZigZagIcon = ({ colour }) => {\n  return (\n    <MainContainer colour={colour}>\n      <CgShapeZigzag />\n    </MainContainer>\n  )\n}\n","import styled from 'styled-components'\nimport { COLOURS } from '../../common/constants'\n\nimport { CrossIcon, CircleIcon, ZigZagIcon } from '../../common/Icon'\n\nconst MainContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 1;\n  overflow: hidden;\n`\n\nconst CrossContainer = styled.div`\n  position: absolute;\n  left: 15vw;\n  top: 25vh;\n`\n\nconst CircleContainer = styled.div`\n  position: absolute;\n  left: 75vw;\n  top: 50vh;\n`\n\nconst ZigZagContainer1 = styled.div`\n  position: absolute;\n  left: 10vw;\n  top: 80vh;\n  transform: rotate(40deg);\n`\n\nconst ZigZagContainer2 = styled.div`\n  position: absolute;\n  left: 90vw;\n  top: 30vh;\n  transform: rotate(-25deg);\n`\n\nexport const IconsOverlay = () => {\n  return (\n    <MainContainer>\n      <CrossContainer>\n        <CrossIcon />\n      </CrossContainer>\n      <CircleContainer>\n        <CircleIcon />\n      </CircleContainer>\n      <ZigZagContainer1>\n        <ZigZagIcon colour={COLOURS.ROSE} />\n      </ZigZagContainer1>\n      <ZigZagContainer2>\n        <ZigZagIcon />\n      </ZigZagContainer2>\n    </MainContainer>\n  )\n}\n","import { IconsOverlay } from './IconsOverlay.component'\n\nexport default IconsOverlay\n","import styled, { keyframes } from 'styled-components'\nimport { ParallaxBanner } from 'react-scroll-parallax'\nimport { tada } from 'react-animations'\nimport { IoIosArrowDown } from 'react-icons/io'\nimport { SiLinkedin, SiInstagram, SiGithub } from 'react-icons/si'\n\nimport { COLOURS } from '../common/constants'\nimport { CircleButton } from '../common'\nimport IconsOverlay from './IconsOverlay'\n\nconst bounceAnimation = keyframes`${tada}`\n\nconst BannerContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n`\n\nconst HeaderOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  z-index: 2;\n`\n\nconst ScrollDownIcon = styled(IoIosArrowDown)`\n  animation: 2s ${bounceAnimation};\n  animation-iteration-count: 2;\n  color: ${COLOURS.WHITE};\n  width: 5em;\n  height: 5em;\n  cursor: pointer;\n  position: absolute; \n  bottom 0;\n`\n\nconst HeaderText = styled.h1`\n  color: ${COLOURS.WHITE};\n  font-size: 2.5em;\n  font-family: 'Kiwi Maru', serif;\n  text-align: center;\n`\n\nconst SocialsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  svg {\n    color: ${COLOURS.WHITE};\n    width: 30px;\n    height: 30px;\n  }\n`\n\nexport const Header = ({ handleClick }) => {\n  return (\n    <BannerContainer>\n      <ParallaxBanner\n        style={{\n          height: '100vh',\n        }}\n        className='banner-banner'\n        layers={[\n          {\n            image: './images/background.jpg',\n            amount: 0.4,\n          },\n        ]}\n      />\n      <IconsOverlay />\n      <HeaderOverlay>\n        <HeaderText>nick burnard</HeaderText>\n        <HeaderText>front end developer</HeaderText>\n        <SocialsContainer>\n          <CircleButton link={'https://www.linkedin.com/in/nick-burnard/'}>\n            <SiLinkedin />\n          </CircleButton>\n          <CircleButton link={'https://www.instagram.com/nich1jb/'}>\n            <SiInstagram />\n          </CircleButton>\n          <CircleButton link={'https://github.com/nich1jb'}>\n            <SiGithub />\n          </CircleButton>\n        </SocialsContainer>\n        <ScrollDownIcon onClick={handleClick} />\n      </HeaderOverlay>\n    </BannerContainer>\n  )\n}\n","import { Header } from './Header.component'\n\nexport default Header\n","import { useState, useRef, useEffect } from 'react'\nimport styled from 'styled-components'\n\nconst FadeSectionContainer = styled.div`\n  opacity: ${(props) => (props.isVisible ? '1' : '0')};\n  transform: ${(props) => (props.isVisible ? 'none' : 'translateY(20vh)')};\n  visibility: ${(props) => (props.isVisible ? 'visible' : 'hidden')};\n  transition: opacity 1200ms ease-out, transform 600ms ease-out, visibility 1200ms ease-out;\n  will-change: opacity, transform, visibility;\n`\n\nexport const FadeSection = ({ children }) => {\n  const [isVisible, setVisible] = useState(false)\n  const [isLoaded, setIsloaded] = useState(false)\n  const fadeRef = useRef()\n  useEffect(() => {\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          setIsloaded(true)\n        }\n        setVisible(entry.isIntersecting)\n      })\n    })\n    observer.observe(fadeRef.current)\n  }, [])\n\n  return (\n    <FadeSectionContainer ref={fadeRef} isVisible={isVisible || isLoaded}>\n      {children}\n    </FadeSectionContainer>\n  )\n}\n","import { FadeSection } from './FadeSection.component'\n\nexport default FadeSection\n","import styled from 'styled-components'\nimport { BsPerson } from 'react-icons/bs'\nimport { ToWords } from 'to-words'\n\nimport FadeSection from '../FadeSection'\nimport { Title, Quote } from '../common'\nimport { COLOURS } from '../common/constants'\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  box-sizing: border-box;\n  background: radial-gradient(\n      circle,\n      transparent 20%,\n      ${COLOURS.ANAKIWA} 20%,\n      ${COLOURS.ANAKIWA} 80%,\n      transparent 80%,\n      transparent\n    ),\n    radial-gradient(\n        circle,\n        transparent 20%,\n        ${COLOURS.ANAKIWA} 20%,\n        ${COLOURS.ANAKIWA} 80%,\n        transparent 80%,\n        transparent\n      )\n      50px 50px,\n    linear-gradient(${COLOURS.PERANO} 8px, transparent 8px) 0 -4px,\n    linear-gradient(90deg, ${COLOURS.PERANO} 8px, transparent 8px) -4px 0;\n  background-color: ${COLOURS.ANAKIWA};\n  background-size: 100px 100px, 100px 100px, 50px 50px, 50px 50px;\n`\n\nconst AboutContainer = styled.div`\n  box-sizing: border-box;\n  height: 100%;\n  width: 100%;\n  max-width: 1200px;\n  padding: 0 30px 50px;\n`\n\nconst ContentContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: center;\n  }\n  padding-bottom: 40px;\n`\n\nconst AboutText = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst Paragraph = styled.p`\n  font-size: 16px;\n`\n\nconst ProfileImage = styled.img`\n  height: 200px;\n  width: 200px;\n  border-radius: 50%;\n  margin-right: 30px;\n  @media (max-width: 768px) {\n    margin-right: 0;\n  }\n`\n\nconst Image = styled.img`\n  box-sizing: border-box;\n  width: 23%;\n  border-radius: 20%;\n  margin: 10px;\n  @media (max-width: 768px) {\n    height: 300px;\n    width: 300px;\n    margin-right: 0;\n  }\n  @media (max-width: 420px) {\n    height: 70vw;\n    width: 70vw;\n    margin-right: 0;\n  }\n`\n\nexport const About = ({ scrollToRef }) => {\n  const calculateAge = () => {\n    var birthDate = new Date('1994-03-18')\n    var ageDifMs = Date.now() - birthDate\n    var ageDate = new Date(ageDifMs) // miliseconds from epoch\n    return Math.abs(ageDate.getUTCFullYear() - 1970)\n  }\n\n  const toWords = new ToWords()\n  const age = calculateAge()\n  const yearsInIndustry = toWords.convert(new Date().getFullYear() - 2016).toLowerCase()\n\n  return (\n    <MainContainer>\n      <AboutContainer ref={scrollToRef}>\n        <FadeSection>\n          <Title icon={<BsPerson />}>Who am I?</Title>\n          <ContentContainer>\n            <ProfileImage src='./images/itsme.jpg' />\n            <AboutText>\n              <Paragraph>\n                <Quote>\n                  \"Who am I? You sure you want to know? The story of my life is not for the faint of heart. If somebody\n                  told you I was just your average, ordinary guy, not a care in the world, then somebody lied.\" - Peter\n                  Parker/Spider-Man\n                </Quote>\n              </Paragraph>\n              <Paragraph>\n                Hi I'm Nick (he/him), a {age} year old software engineer with around {yearsInIndustry} years of industry\n                experience. I like Front End so much that I made this website for you to see. How about that?\n              </Paragraph>\n              <Paragraph>\n                Over the years, I have developed strong engineering skills and practices and pride myself on producing\n                large-scale solutions from the ground up and, in more recent years, have been mentoring juniors and\n                leading technical decisions. I have always loved working with great engineers and people who have a\n                clear vision and see it through.\n              </Paragraph>\n              <Paragraph>\n                Outside of work, I enjoy painting Warhammer while watching trashy tv, playing video games, and spending\n                time with my friends. Here's some photos for proof:\n              </Paragraph>\n            </AboutText>\n          </ContentContainer>\n          <FadeSection>\n            <ContentContainer>\n              <Image src='./images/about01_400.png' />\n              <Image src='./images/about02_400.png' />\n              <Image src='./images/about03_400.png' />\n              <Image src='./images/about04_400.png' />\n            </ContentContainer>\n          </FadeSection>\n        </FadeSection>\n      </AboutContainer>\n    </MainContainer>\n  )\n}\n","import { About } from './About.component'\n\nexport default About\n","import styled from 'styled-components'\n\nimport { COLOURS } from '../../common/constants'\n\nconst MainContainer = styled.div`\n  border: 1px solid ${COLOURS.BLACK_40};\n  border-radius: 5px;\n  background: ${COLOURS.WHITE_40};\n  padding: 10px;\n  display: flex;\n  margin-top: 20px;\n  @media (max-width: 480px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`\n\nconst Image = styled.img`\n  width: 200px;\n  height: 200px;\n`\n\nconst InnerTitle = styled.div`\n  color: ${COLOURS.COLBALT};\n  font-size: 1.5em;\n  @media (max-width: 480px) {\n    text-align: center;\n  }\n`\n\nconst Subtitle = styled.div`\n  color: ${COLOURS.ST_TROPAZ};\n  @media (max-width: 480px) {\n    text-align: center;\n  }\n`\n\nconst TextContainer = styled.div`\n  margin: 20px;\n  display: flex;\n  flex-direction: column;\n`\n\nconst Body = styled.div`\n  color: ${COLOURS.TUNDURA};\n`\n\nexport const JobCard = ({ logo, title, jobTitle, from, to, children }) => {\n  return (\n    <MainContainer>\n      <Image src={logo} />\n      <TextContainer>\n        <InnerTitle>{title}</InnerTitle>\n        <Subtitle>{jobTitle}</Subtitle>\n        <Subtitle>\n          <i>{`${from}${to ? ` - ${to}` : ''}`}</i>\n        </Subtitle>\n        <Body>{children}</Body>\n      </TextContainer>\n    </MainContainer>\n  )\n}\n","import { JobCard } from './JobCard.component'\n\nexport default JobCard\n","import styled from 'styled-components'\nimport { GiBroadsword } from 'react-icons/gi'\n\nimport FadeSection from '../FadeSection'\nimport { Title, Quote } from '../common'\nimport { COLOURS } from '../common/constants'\nimport JobCard from './JobCard'\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  background: radial-gradient(${COLOURS.LIGHT_ORCHID} 3px, transparent 4px),\n    radial-gradient(${COLOURS.LIGHT_ORCHID} 3px, transparent 4px),\n    linear-gradient(${COLOURS.COTTON_CANDY} 4px, transparent 0),\n    linear-gradient(\n      45deg,\n      transparent 74px,\n      transparent 75px,\n      ${COLOURS.LIGHT_ORCHID} 75px,\n      ${COLOURS.LIGHT_ORCHID} 76px,\n      transparent 77px,\n      transparent 109px\n    ),\n    linear-gradient(\n      -45deg,\n      transparent 75px,\n      transparent 76px,\n      ${COLOURS.LIGHT_ORCHID} 76px,\n      ${COLOURS.LIGHT_ORCHID} 77px,\n      transparent 78px,\n      transparent 109px\n    ),\n    ${COLOURS.COTTON_CANDY};\n  background-size: 109px 109px, 109px 109px, 100% 6px, 109px 109px, 109px 109px;\n  background-position: 54px 55px, 0px 0px, 0px 0px, 0px 0px, 0px 0px;\n`\n\nconst ExperienceContainer = styled.div`\n  box-sizing: border-box;\n  height: 100%;\n  width: 100%;\n  max-width: 1200px;\n  padding: 0 30px 90px;\n`\n\nconst Paragraph = styled.p`\n  font-size: 16px;\n`\n\nexport const Experience = () => {\n  return (\n    <MainContainer>\n      <ExperienceContainer>\n        <FadeSection>\n          <Title icon={<GiBroadsword />}>My Journey</Title>\n          <Paragraph>\n            <Quote>\"Do you know how much I've sacrificed!? \" - Norman Osborn/Green Goblin</Quote>\n          </Paragraph>\n        </FadeSection>\n        <FadeSection>\n          <JobCard\n            logo={'./images/annalise.png'}\n            title={'annalise.ai'}\n            jobTitle={'Software Engineer'}\n            from={'2021'}\n            to={'Present'}\n          >\n            <Paragraph>\n              At the start of this year, I moved away from consulting for the first time in my career and started\n              working at Annalise.ai. Here, I’m working as a front end developer on the internal Annalise CXR product, a\n              medical imaging AI tool used to assist clinicians with the interpretation of radiological imaging studies.\n              My journey here has only just started and I’m very excited to see where it will take me!\n            </Paragraph>\n          </JobCard>\n        </FadeSection>\n        <FadeSection>\n          <JobCard\n            logo={'./images/digio.jpeg'}\n            title={'DigIO'}\n            jobTitle={'Software Engineer'}\n            from={'2018'}\n            to={'2020'}\n          >\n            <Paragraph>\n              Worked with various clients (namely ANZ and Reecetech) in a consultative manner as a front end engineer.\n              During this time, my responsibilities and skill set included:\n            </Paragraph>\n            <Paragraph>\n              • Expertise in React (and other front end technologies), the ability to make decisions around the\n              technology and communicate this expertise\n            </Paragraph>\n            <Paragraph>\n              • Developing back end skills in relational database design and implementation (DynamoDB), API calls and\n              data implementation (Java and Python)\n            </Paragraph>\n            <Paragraph>• Mentoring interns and junior engineers</Paragraph>\n            <Paragraph>\n              • Strong communication skills and the ability to explain concepts to both the technical and business sides\n              of an organisation\n            </Paragraph>\n            <Paragraph>\n              • Extra-curricular involvement in DigIO across the swag team, involving budget management, design\n              decisions, consulting the company wants and needs, and making branding and marketing decisions within and\n              outside of the company\n            </Paragraph>\n          </JobCard>\n        </FadeSection>\n        <FadeSection>\n          <JobCard\n            logo={'./images/odecee.png'}\n            title={'Odecee'}\n            jobTitle={'Associate Software Engineer'}\n            from={'2016'}\n            to={'2018'}\n          >\n            <Paragraph>\n              Also a consulting company, clients were ANZ and CoreLogic. Throughout this time, I began as a front end\n              engineer and dabbled in test automation. This included:\n            </Paragraph>\n            <Paragraph>\n              • Producing automated test scripts in front end (Solenium, Webdriver, Protractor and Cucumber) and back\n              end (Mocha)\n            </Paragraph>\n            <Paragraph>• Understanding and capturing edge cases in test automation design</Paragraph>\n            <Paragraph>• Patching small bugs where possible</Paragraph>\n          </JobCard>\n        </FadeSection>\n        <FadeSection>\n          <JobCard logo={'./images/nab.png'} title={'nab'} jobTitle={'IBL Student'} from={'2015'}>\n            <Paragraph>\n              As part of Industry Based Learning, completed a 6-month internship with NAB around Cloud Engineering. This\n              internship touched in:\n            </Paragraph>\n            <Paragraph>• Provisioning toolings in AWS</Paragraph>\n            <Paragraph>• Building a shopfront site to gather requirements for teams building in the platform</Paragraph>\n          </JobCard>\n        </FadeSection>\n        <FadeSection>\n          <JobCard\n            logo={'./images/monash.png'}\n            title={'Monash University'}\n            jobTitle={'Bachelor of Computer Science'}\n            from={'2013'}\n            to={'2015'}\n          >\n            <Paragraph>\n              Attended Monash University primarily on the Clayton campus. While my degree was in Computer Science, I\n              also did units in philosophy and games development. For the final six months of my degree I completed an\n              IBL placement at NAB which helped me get a foot in the door in the industry and to kick-start my career.\n            </Paragraph>\n          </JobCard>\n        </FadeSection>\n      </ExperienceContainer>\n    </MainContainer>\n  )\n}\n","import { Experience } from './Experience.component'\n\nexport default Experience\n","import styled from 'styled-components'\n\nimport { COLOURS } from '../common/constants'\n\nconst Link = styled.a`\n  color: ${COLOURS.ROSE};\n`\n\nconst FooterContainer = styled.div`\n  font-family: 'Kiwi Maru', serif;\n  width: 100%;\n  background: ${COLOURS.STRATOS};\n  color: white;\n  text-align: center;\n  padding: 10px 0;\n`\n\nexport const Footer = () => {\n  return (\n    <FooterContainer>\n      Made with <Link href='https://reactjs.org/'>React</Link>. Background vector created by{' '}\n      <Link href='https://www.freepik.com/vectors/background'>freepik</Link>\n    </FooterContainer>\n  )\n}\n","import { Footer } from './Footer.component'\n\nexport default Footer\n","import { useRef } from 'react'\nimport styled from 'styled-components'\nimport Header from './components/Header'\nimport About from './components/About'\nimport Experience from './components/Experience'\nimport Footer from './components/Footer'\n\nconst MainContainer = styled.div`\n  font-family: 'Roboto Slab', serif;\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  align-items: center;\n`\n\nfunction App() {\n  const aboutRef = useRef(null)\n  const handleClick = () => {\n    aboutRef.current.scrollIntoView({ behavior: 'smooth' })\n  }\n\n  return (\n    <MainContainer>\n      <Header handleClick={handleClick} />\n      <About scrollToRef={aboutRef} />\n      <Experience />\n      <Footer />\n    </MainContainer>\n  )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ParallaxProvider } from 'react-scroll-parallax'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ParallaxProvider>\n      <App />\n    </ParallaxProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}